from telebot.apihelper import ApiTelegramException
from telebot.asyncio_handler_backends import State, StatesGroup
from telebot.types import Message

from labobot.configuration import bot

import database.main_db.common_crud as common_crud
from database.main_db.common_crud import UserEnum


class AuthStates(StatesGroup):
    full_name = State()


async def is_subscribed(chat_id: int, user_id: int) -> bool:
    try:
        response = await bot.get_chat_member(chat_id, user_id)
        if response.status == 'left':
            return False
        else:
            return True
    except ApiTelegramException as ex:
        if ex.result_json['description'] == 'Bad Request: user not found':
            return False


@bot.message_handler(commands=['start'])
async def handle_start(message: Message):
    user = common_crud.user_verification(message.from_user.id)
    match user:
        case UserEnum.Admin:
            await bot.send_message(
                message.chat.id,
                '<b>–ü—Ä–∏–≤–µ—Ç, –æ –º–æ–≥—É—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∞–¥–º–∏–Ω! üòé –ü–æ–ø—Ä–æ—à—É –≤–∞—Å –Ω–µ –Ω–∞–∂–∏–º–∞—Ç—å –Ω–∞ –∫—Ä–∞—Å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ —Å–ª—É—á–∞–π–Ω–æ.üî¥</b>',
                parse_mode='HTML',
                # TODO: –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
            )
        case UserEnum.Teacher:
            await bot.send_message(
                message.chat.id,
                '<b>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —É—á–∏—Ç–µ–ª—å! üìö‚ú® –Ø –ø–æ–º–æ–≥—É –≤–∞–º  —Å–¥–µ–ª–∞—Ç—å —É—á–µ–±–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–µ–µ –∏ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–µ–µ!</b>',
                parse_mode='HTML',
                # TODO: –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
            )
        case UserEnum.Student:
            await bot.send_message(
                message.chat.id,
                '<b>–ü—Ä–∏–≤–µ—Ç! üåüüéì –†–∞–¥—ã –≤–∏–¥–µ—Ç—å —Ç–µ–±—è –∑–¥–µ—Å—å! –î–∞–≤–∞–π –≤–º–µ—Å—Ç–µ —Å–¥–µ–ª–∞–µ–º —ç—Ç–æ—Ç —É—á–µ–±–Ω—ã–π –ø—É—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏–≤–Ω—ã–º</b>!',
                parse_mode='HTML',
                # TODO: –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
            )
        case _:
            await bot.send_message(
                message.chat.id,
                '<b>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ, –æ –∑–∞–≥–∞–¥–æ—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å! ü§îüîç –î–∞–≤–∞–π—Ç–µ –ø–æ–ø—Ä–æ–±—É–µ–º —Ä–∞–∑–≥–∞–¥–∞—Ç—å —ç—Ç—É –∑–∞–≥–∞–¥–∫—É –≤–º–µ—Å—Ç–µ!</b>',
                parse_mode='HTML',
                # TODO: –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
            )